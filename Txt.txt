#include <stdio.h>
#include <string.h>
#include <math.h>
#include <stdlib.h>
void Mapa(char[]);
int main(){int OP,N=0;char Name[100];char TXT[]=".txt";int CH=0;	
printf("Bienvenido\n[1]Iniciar nueva partida.\n[2]Cargar partida guardada.\n");scanf("%d",&OP);switch (OP){
case 1:printf("Escribe el nombre para la partida:");scanf("%s",Name);strcat(Name,"");strcat(Name,TXT);
FILE *p;p=fopen(Name,"w");if (p==NULL){printf("Error de archivo.");}
else {fprintf(p,"Vidas disponibles:3");}fclose(p);Mapa(Name);break;
case 2:while (CH==0){printf("\nEscribe el nombre de la partida:");scanf("%s",Name);strcat(Name,"");strcat(Name,TXT);
FILE *s;s=fopen(Name,"r");if (s==NULL){printf("Archivo no encontrado.");}if (s!=NULL){Mapa(Name);fclose(s);}}break;}return 0;}

void Mapa(char Name[]){char Map[19][19];
Map[0][0]='B';Map[1][0]='B';Map[2][0]='B';Map[3][0]='B';Map[4][0]='B';Map[5][0]='B';Map[6][0]='B';Map[7][0]='B';Map[8][0]='B';Map[9][0]='B';Map[10][0]='B';Map[11][0]='B';Map[12][0]='B';Map[13][0]='B';Map[14][0]='B';Map[15][0]='B';Map[16][0]='B';Map[17][0]='B';Map[18][0]='B';Map[19][0]='B';
Map[0][1]='B';Map[1][1]='F';Map[2][1]='F';Map[3][1]='F';Map[4][1]='F';Map[5][1]='F';Map[6][1]='F';Map[7][1]='F';Map[8][1]='F';Map[9][1]='>';Map[10][1]='B';Map[11][1]='F';Map[12][1]='F';Map[13][1]='F';Map[14][1]='F';Map[15][1]='F';Map[16][1]='F';Map[17][1]='F';Map[18][1]='F';Map[19][1]='B';
Map[0][2]='B';Map[1][2]='F';Map[2][2]='B';Map[3][2]='B';Map[4][2]='B';Map[5][2]='B';Map[6][2]='B';Map[7][2]='B';Map[8][2]='B';Map[9][2]='B';Map[10][2]='B';Map[11][2]='B';Map[12][2]='B';Map[13][2]='B';Map[14][2]='B';Map[15][2]='B';Map[16][2]='B';Map[17][2]='B';Map[18][2]='F';Map[19][2]='B';
Map[0][3]='B';Map[1][3]='F';Map[2][3]='B';Map[3][3]='B';Map[4][3]='B';Map[5][3]='B';Map[6][3]='B';Map[7][3]='B';Map[8][3]='B';Map[9][3]='B';Map[10][3]='B';Map[11][3]='B';Map[12][3]='B';Map[13][3]='B';Map[14][3]='B';Map[15][3]='B';Map[16][3]='B';Map[17][3]='B';Map[18][3]='F';Map[19][3]='B';
Map[0][4]='B';Map[1][4]='F';Map[2][4]='B';Map[3][4]='B';Map[4][4]='B';Map[5][4]='B';Map[6][4]='B';Map[7][4]='B';Map[8][4]='B';Map[9][4]='B';Map[10][4]='B';Map[11][4]='B';Map[12][4]='B';Map[13][4]='B';Map[14][4]='B';Map[15][4]='B';Map[16][4]='B';Map[17][4]='B';Map[18][4]='F';Map[19][4]='B';
Map[0][5]='B';Map[1][5]='F';Map[2][5]='B';Map[3][5]='B';Map[4][5]='B';Map[5][5]='T';Map[6][5]='B';Map[7][5]='B';Map[8][5]='B';Map[9][5]='B';Map[10][5]='S';Map[11][5]='B';Map[12][5]='B';Map[13][5]='B';Map[14][5]='F';Map[15][5]='B';Map[16][5]='B';Map[17][5]='B';Map[18][5]='F';Map[19][5]='B';
Map[0][6]='B';Map[1][6]='F';Map[2][6]='B';Map[3][6]='B';Map[4][6]='B';Map[5][6]='F';Map[6][6]='B';Map[7][6]='B';Map[8][6]='B';Map[9][6]='B';Map[10][6]='F';Map[11][6]='B';Map[12][6]='B';Map[13][6]='B';Map[14][6]='F';Map[15][6]='B';Map[16][6]='B';Map[17][6]='B';Map[18][6]='F';Map[19][6]='B';
Map[0][7]='B';Map[1][7]='F';Map[2][7]='B';Map[3][7]='B';Map[4][7]='B';Map[5][7]='F';Map[6][7]='B';Map[7][7]='B';Map[8][7]='B';Map[9][7]='B';Map[10][7]='F';Map[11][7]='B';Map[12][7]='B';Map[13][7]='B';Map[14][7]='F';Map[15][7]='B';Map[16][7]='B';Map[17][7]='B';Map[18][7]='F';Map[19][7]='B';
Map[0][8]='B';Map[1][8]='F';Map[2][8]='B';Map[3][8]='B';Map[4][8]='B';Map[5][8]='F';Map[6][8]='B';Map[7][8]='B';Map[8][8]='B';Map[9][8]='B';Map[10][8]='F';Map[11][8]='B';Map[12][8]='B';Map[13][8]='B';Map[14][8]='F';Map[15][8]='B';Map[16][8]='B';Map[17][8]='B';Map[18][8]='F';Map[19][8]='B';
Map[0][9]='B';Map[1][9]='F';Map[2][9]='B';Map[3][9]='B';Map[4][9]='B';Map[5][9]='F';Map[6][9]='B';Map[7][9]='B';Map[8][9]='B';Map[9][9]='B';Map[10][9]='F';Map[11][9]='B';Map[12][9]='B';Map[13][9]='B';Map[14][9]='F';Map[15][9]='B';Map[16][9]='B';Map[17][9]='B';Map[18][9]='F';Map[19][9]='B';
Map[0][10]='B';Map[1][10]='F';Map[2][10]='B';Map[3][10]='B';Map[4][10]='B';Map[5][10]='F';Map[6][10]='B';Map[7][10]='B';Map[8][10]='B';Map[9][10]='B';Map[10][10]='F';Map[11][10]='B';Map[12][10]='B';Map[13][10]='B';Map[14][10]='F';Map[15][10]='B';Map[16][10]='B';Map[17][10]='B';Map[18][10]='F';Map[19][10]='B';
Map[0][11]='B';Map[1][11]='F';Map[2][11]='B';Map[3][11]='B';Map[4][11]='B';Map[5][11]='F';Map[6][11]='B';Map[7][11]='B';Map[8][11]='B';Map[9][11]='B';Map[10][11]='F';Map[11][11]='B';Map[12][11]='B';Map[13][11]='B';Map[14][11]='F';Map[15][11]='B';Map[16][11]='B';Map[17][11]='B';Map[18][11]='F';Map[19][11]='B';
Map[0][12]='B';Map[1][12]='F';Map[2][12]='B';Map[3][12]='B';Map[4][12]='B';Map[5][12]='F';Map[6][12]='B';Map[7][12]='B';Map[8][12]='B';Map[9][12]='B';Map[10][12]='F';Map[11][12]='B';Map[12][12]='B';Map[13][12]='B';Map[14][12]='F';Map[15][12]='B';Map[16][12]='B';Map[17][12]='B';Map[18][12]='F';Map[19][12]='B';
Map[0][13]='B';Map[1][13]='F';Map[2][13]='B';Map[3][13]='B';Map[4][13]='B';Map[5][13]='F';Map[6][13]='B';Map[7][13]='B';Map[8][13]='B';Map[9][13]='B';Map[10][13]='F';Map[11][13]='B';Map[12][13]='B';Map[13][13]='B';Map[14][13]='F';Map[15][13]='B';Map[16][13]='B';Map[17][13]='B';Map[18][13]='F';Map[19][13]='B';
Map[0][14]='B';Map[1][14]='F';Map[2][14]='B';Map[3][14]='B';Map[4][14]='B';Map[5][14]='F';Map[6][14]='B';Map[7][14]='B';Map[8][14]='B';Map[9][14]='B';Map[10][14]='F';Map[11][14]='B';Map[12][14]='B';Map[13][14]='B';Map[14][14]='F';Map[15][14]='B';Map[16][14]='B';Map[17][14]='B';Map[18][14]='F';Map[19][14]='B';
Map[0][15]='B';Map[1][15]='F';Map[2][15]='B';Map[3][15]='B';Map[4][15]='B';Map[5][15]='F';Map[6][15]='B';Map[7][15]='B';Map[8][15]='B';Map[9][15]='B';Map[10][15]='F';Map[11][15]='B';Map[12][15]='B';Map[13][15]='B';Map[14][15]='F';Map[15][15]='B';Map[16][15]='B';Map[17][15]='B';Map[18][15]='F';Map[19][15]='B';
Map[0][16]='B';Map[1][16]='F';Map[2][16]='B';Map[3][16]='B';Map[4][16]='B';Map[5][16]='F';Map[6][16]='B';Map[7][16]='B';Map[8][16]='B';Map[9][16]='B';Map[10][16]='F';Map[11][16]='B';Map[12][16]='B';Map[13][16]='B';Map[14][16]='F';Map[15][16]='B';Map[16][16]='B';Map[17][16]='B';Map[18][16]='F';Map[19][16]='B';
Map[0][17]='B';Map[1][17]='F';Map[2][17]='B';Map[3][17]='B';Map[4][17]='B';Map[5][17]='F';Map[6][17]='B';Map[7][17]='B';Map[8][17]='B';Map[9][17]='B';Map[10][17]='F';Map[11][17]='B';Map[12][17]='B';Map[13][17]='B';Map[14][17]='F';Map[15][17]='B';Map[16][17]='B';Map[17][17]='B';Map[18][17]='F';Map[19][17]='B';
Map[0][18]='B';Map[1][18]='F';Map[2][18]='F';Map[3][18]='F';Map[4][18]='F';Map[5][18]='F';Map[6][18]='F';Map[7][18]='F';Map[8][18]='F';Map[9][18]='F';Map[10][18]='F';Map[11][18]='F';Map[12][18]='F';Map[13][18]='F';Map[14][18]='F';Map[15][18]='F';Map[16][18]='F';Map[17][18]='F';Map[18][18]='F';Map[19][18]='B';
Map[0][19]='B';Map[1][19]='B';Map[2][19]='B';Map[3][19]='B';Map[4][19]='B';Map[5][19]='B';Map[6][19]='B';Map[7][19]='B';Map[8][19]='B';Map[9][19]='B';Map[10][19]='B';Map[11][19]='B';Map[12][19]='B';Map[13][19]='B';Map[14][19]='B';Map[15][19]='B';Map[16][19]='B';Map[17][19]='B';Map[18][19]='B';Map[19][19]='B';

int V=3;int G=0; char M; 
int A=-1; int W=1; int S=-1; int D=1; int X=9; int Y=1; char B[1][1]; B[0][0]='B';
while (G==0){
printf("                                              Vidas disponibles:%d\n",V);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][0],Map[1][0],Map[2][0],Map[3][0],Map[4][0],Map[5][0],Map[6][0],Map[7][0],Map[8][0],Map[9][0],Map[10][0],Map[11][0],Map[12][0],Map[13][0],Map[14][0],Map[15][0],Map[16][0],Map[17][0],Map[18][0],Map[19][0]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][1],Map[1][1],Map[2][1],Map[3][1],Map[4][1],Map[5][1],Map[6][1],Map[7][1],Map[8][1],Map[9][1],Map[10][1],Map[11][1],Map[12][1],Map[13][1],Map[14][1],Map[15][1],Map[16][1],Map[17][1],Map[18][1],Map[19][1]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][2],Map[1][2],Map[2][2],Map[3][2],Map[4][2],Map[5][2],Map[6][2],Map[7][2],Map[8][2],Map[9][2],Map[10][2],Map[11][2],Map[12][2],Map[13][2],Map[14][2],Map[15][2],Map[16][2],Map[17][2],Map[18][2],Map[19][2]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][3],Map[1][3],Map[2][3],Map[3][3],Map[4][3],Map[5][3],Map[6][3],Map[7][3],Map[8][3],Map[9][3],Map[10][3],Map[11][3],Map[12][3],Map[13][3],Map[14][3],Map[15][3],Map[16][3],Map[17][3],Map[18][3],Map[19][3]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][4],Map[1][4],Map[2][4],Map[3][4],Map[4][4],Map[5][4],Map[6][4],Map[7][4],Map[8][4],Map[9][4],Map[10][4],Map[11][4],Map[12][4],Map[13][4],Map[14][4],Map[15][4],Map[16][4],Map[17][4],Map[18][4],Map[19][4]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][5],Map[1][5],Map[2][5],Map[3][5],Map[4][5],Map[5][5],Map[6][5],Map[7][5],Map[8][5],Map[9][5],Map[10][5],Map[11][5],Map[12][5],Map[13][5],Map[14][5],Map[15][5],Map[16][5],Map[17][5],Map[18][5],Map[19][5]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][6],Map[1][6],Map[2][6],Map[3][6],Map[4][6],Map[5][6],Map[6][6],Map[7][6],Map[8][6],Map[9][6],Map[10][6],Map[11][6],Map[12][6],Map[13][6],Map[14][6],Map[15][6],Map[16][6],Map[17][6],Map[18][6],Map[19][6]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][7],Map[1][7],Map[2][7],Map[3][7],Map[4][7],Map[5][7],Map[6][7],Map[7][7],Map[8][7],Map[9][7],Map[10][7],Map[11][7],Map[12][7],Map[13][7],Map[14][7],Map[15][7],Map[16][7],Map[17][7],Map[18][7],Map[19][7]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][8],Map[1][8],Map[2][8],Map[3][8],Map[4][8],Map[5][8],Map[6][8],Map[7][8],Map[8][8],Map[9][8],Map[10][8],Map[11][8],Map[12][8],Map[13][8],Map[14][8],Map[15][8],Map[16][8],Map[17][8],Map[18][8],Map[19][8]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][9],Map[1][9],Map[2][9],Map[3][9],Map[4][9],Map[5][9],Map[6][9],Map[7][9],Map[8][9],Map[9][9],Map[10][9],Map[11][9],Map[12][9],Map[13][9],Map[14][9],Map[15][9],Map[16][9],Map[17][9],Map[18][9],Map[19][9]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][10],Map[1][10],Map[2][10],Map[3][10],Map[4][10],Map[5][10],Map[6][10],Map[7][10],Map[8][10],Map[9][10],Map[10][10],Map[11][10],Map[12][10],Map[13][10],Map[14][10],Map[15][10],Map[16][10],Map[17][10],Map[18][10],Map[19][10]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][11],Map[1][11],Map[2][11],Map[3][11],Map[4][11],Map[5][11],Map[6][11],Map[7][11],Map[8][11],Map[9][11],Map[10][11],Map[11][11],Map[12][11],Map[13][11],Map[14][11],Map[15][11],Map[16][11],Map[17][11],Map[18][11],Map[19][11]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][12],Map[1][12],Map[2][12],Map[3][12],Map[4][12],Map[5][12],Map[6][12],Map[7][12],Map[8][12],Map[9][12],Map[10][12],Map[11][12],Map[12][12],Map[13][12],Map[14][12],Map[15][12],Map[16][12],Map[17][12],Map[18][12],Map[19][12]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][13],Map[1][13],Map[2][13],Map[3][13],Map[4][13],Map[5][13],Map[6][13],Map[7][13],Map[8][13],Map[9][13],Map[10][13],Map[11][13],Map[12][13],Map[13][13],Map[14][13],Map[15][13],Map[16][13],Map[17][13],Map[18][13],Map[19][13]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][14],Map[1][14],Map[2][14],Map[3][14],Map[4][14],Map[5][14],Map[6][14],Map[7][14],Map[8][14],Map[9][14],Map[10][14],Map[11][14],Map[12][14],Map[13][14],Map[14][14],Map[15][14],Map[16][14],Map[17][14],Map[18][14],Map[19][14]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][15],Map[1][15],Map[2][15],Map[3][15],Map[4][15],Map[5][15],Map[6][15],Map[7][15],Map[8][15],Map[9][15],Map[10][15],Map[11][15],Map[12][15],Map[13][15],Map[14][15],Map[15][15],Map[16][15],Map[17][15],Map[18][15],Map[19][15]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][16],Map[1][16],Map[2][16],Map[3][16],Map[4][16],Map[5][16],Map[6][16],Map[7][16],Map[8][16],Map[9][16],Map[10][16],Map[11][16],Map[12][16],Map[13][16],Map[14][16],Map[15][16],Map[16][16],Map[17][16],Map[18][16],Map[19][16]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][17],Map[1][17],Map[2][17],Map[3][17],Map[4][17],Map[5][17],Map[6][17],Map[7][17],Map[8][17],Map[9][17],Map[10][17],Map[11][17],Map[12][17],Map[13][17],Map[14][17],Map[15][17],Map[16][17],Map[17][17],Map[18][17],Map[19][17]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][18],Map[1][18],Map[2][18],Map[3][18],Map[4][18],Map[5][18],Map[6][18],Map[7][18],Map[8][18],Map[9][18],Map[10][18],Map[11][18],Map[12][18],Map[13][18],Map[14][18],Map[15][18],Map[16][18],Map[17][18],Map[18][18],Map[19][18]);
printf("%c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c %c\n",Map[0][19],Map[1][19],Map[2][19],Map[3][19],Map[4][19],Map[5][19],Map[6][19],Map[7][19],Map[8][19],Map[9][19],Map[10][19],Map[11][19],Map[12][19],Map[13][19],Map[14][19],Map[15][19],Map[16][19],Map[17][19],Map[18][19],Map[19][19]);
printf("Movimiento A,W,S,D (Solo Mayuscula):"); scanf(" %c",&M);
switch (M){
case 'A':
if (Map[9][1]==Map[X][Y]){
Map[X][Y]='E';X=X-1;Map[X][Y]='>';}
if (Map[X-1][Y]==B[0][0]){}else {Map[X][Y]='F';X=X-1;Map[X][Y]='>';}break;

case 'W':if (Map[X][Y-1]==B[0][0]){}else {Map[X][Y]='F';Y=Y-1;Map[X][Y]='>';}
if(Map[5][5]=='>'){V=V-1; printf("\nHas perdido una vida."); Map[X][Y]='T';X=9;Y=1;Map[X][Y]='>'; }
if(Map[10][5]=='>'){G=1;}break;

case 'S':if (Map[X][Y+1]==B[0][0]){}else {Map[X][Y]='F';Y=Y+1;Map[X][Y]='>';}break;

case 'D':if (Map[X+1][Y]==B[0][0]){}else {Map[X][Y]='F';X=X+1;Map[X][Y]='>';}break;	
}} if (G==1){printf("Has Ganado.");}


FILE *m;m=fopen(Name,"w");if (m==NULL){printf("Error al mostrar el mapa.");}else{fprintf(m,"vidas restantes:2\n");
fprintf(m,"B B B B B B B B B B B B B B B B B B B B\n");
fprintf(m,"B F F F F F F F F E B F F F F F F F F B\n");
fprintf(m,"B F B B B B B B B B B B B B B B B B F B\n");
fprintf(m,"B F B B B B B B B B B B B B B B B B F B\n");
fprintf(m,"B F B B B B B B B B B B B B B B B B F B\n");
fprintf(m,"B F B B B T B B B B > B B B F B B B F B\n");
fprintf(m,"B F B B B F B B B B F B B B F B B B F B\n");
fprintf(m,"B F B B B F B B B B F B B B F B B B F B\n");
fprintf(m,"B F B B B F B B B B F B B B F B B B F B\n");
fprintf(m,"B F B B B F B B B B F B B B F B B B F B\n");
fprintf(m,"B F B B B F B B B B F B B B F B B B F B\n");
fprintf(m,"B F B B B F B B B B F B B B F B B B F B\n");
fprintf(m,"B F B B B F B B B B F B B B F B B B F B\n");
fprintf(m,"B F B B B F B B B B F B B B F B B B F B\n");
fprintf(m,"B F B B B F B B B B F B B B F B B B F B\n");
fprintf(m,"B F B B B F B B B B F B B B F B B B F B\n");
fprintf(m,"B F B B B F B B B B F B B B F B B B F B\n");
fprintf(m,"B F F F F F F F F F F F F F F F F F F B\n");
fprintf(m,"B B B B B B B B B B B B B B B B B B B B\n");
}fclose(m);} 